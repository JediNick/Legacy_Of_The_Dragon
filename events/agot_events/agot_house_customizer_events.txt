namespace = agot_house_customizer


# Event that fires on game start to tell you the instructions
agot_house_customizer.0001 = {
	type = character_event
	title = agot_house_customizer.0001.t
	desc = agot_house_customizer.0001.desc

	theme = family

	override_background = {
		reference = physicians_study
	}

	left_portrait = {
		character = root
		animation = throne_room_writer
	}

	right_portrait = {
		character = root
		animation = throne_room_writer
	}


	immediate = {
		play_music_cue = "mx_cue_succession"
	}

	#I want to select an extinct house to play as.
	option = {
		name = agot_house_customizer.0001.a
		# Fire the Extinct House List Selection
		trigger_event = {
			id = agot_house_customizer.0002
		}
	}

	#I want to select a living house to play as.
	option = {
		name = agot_house_customizer.0001.b
	}
}


#Region Select for Extinct Houses
agot_house_customizer.0002 = {
	type = character_event
	title = agot_house_customizer.0002.t
	desc = agot_house_customizer.0002.desc

	theme = family

	override_background = {
		reference = physicians_study
	}

	left_portrait = {
		character = root
		animation = throne_room_writer
	}

	right_portrait = {
		character = root
		animation = throne_room_writer
	}

	immediate = {
		play_music_cue = "mx_cue_succession"
	}

	#Displays Extinct Northern Houses
	option = {
		name = agot_house_customizer.0002.northern
		trigger_event = {
			id = agot_house_customizer.0003
		}
	}

	#Displays Extinct Riverlander Houses
	option = {
		name = agot_house_customizer.0002.riverlands
		trigger_event = {
			id = agot_house_customizer.0004
		}
	}

	#Displays Extinct Vale Houses
	option = {
		name = agot_house_customizer.0002.vale
		trigger_event = {
			id = agot_house_customizer.0005
		}
	}

	#Displays Extinct Crownlands Houses
	option = {
		name = agot_house_customizer.0002.crownlands
		trigger_event = {
			id = agot_house_customizer.0006
		}
	}

	#Displays Extinct Stormlander Houses
	option = {
		name = agot_house_customizer.0002.stormlands
		trigger_event = {
			id = agot_house_customizer.0007
		}
	}

	#Displays Extinct Dorne Houses
	option = {
		name = agot_house_customizer.0002.dorne
		trigger_event = {
			id = agot_house_customizer.0008
		}
	}

	#Displays Extinct Dorne Houses
	option = {
		name = agot_house_customizer.0002.reach
		trigger_event = {
			id = agot_house_customizer.0009
		}
	}

	#Displays Extinct Dorne Houses
	option = {
		name = agot_house_customizer.0002.westerlands
		trigger_event = {
			id = agot_house_customizer.0010
		}
	}

	#Displays Extinct Ironborn Houses
	option = {
		name = agot_house_customizer.0002.ironborn
		trigger_event = {
			id = agot_house_customizer.0011
		}
	}

	#Displays Extinct Essos Houses
	option = {
		name = agot_house_customizer.0002.essos
		trigger_event = {
			id = agot_house_customizer.0012
		}
	}

	# Go back
	option = {
		name = agot_house_customizer.back_option
		trigger_event = {
			id = agot_house_customizer.0001
		}
	}

}


### REGION SELECTION ###

#Select Extinct North
agot_house_customizer.0003 = {
	type = character_event
	title = agot_house_customizer.0003.t
	desc = agot_house_customizer.0003.desc

	theme = family

	override_background = {
		reference = physicians_study
	}

	left_portrait = {
		character = root
		animation = throne_room_writer
	}

	right_portrait = {
		character = root
		animation = throne_room_writer
	}

	immediate = {
		play_music_cue = "mx_cue_succession"
	}

		#Amber
	option = {
		name = agot_house_customizer.0003.amber
		trigger = {
			agot_is_house_extinct_history_trigger = { FOUNDER = character:Amber_1 }
		}
		character:Amber_1 = {
			save_scope_as = hc_selection
		}
		trigger_event = agot_house_customizer.0020
	}

	# Greenwood
	option = {
		name = agot_house_customizer.0003.greenwood
		trigger = {
			agot_is_house_extinct_history_trigger = { FOUNDER = character:Greenwood_1 }
		}	
		character:Greenwood_1 = {
			save_scope_as = hc_selection
		}
		trigger_event = agot_house_customizer.0020
	}

	#Frost
	option = {
		name = agot_house_customizer.0003.frost
		trigger = {
			agot_is_house_extinct_history_trigger = { FOUNDER = character:Frost_1 }
		}	
		character:Frost_1 = {
			save_scope_as = hc_selection
		}
		trigger_event = agot_house_customizer.0020
	}

	#Greystark
	option = {
		name = agot_house_customizer.0003.greystark
		trigger = {
			agot_is_house_extinct_history_trigger = { FOUNDER = character:Greystark_3 }
		}	
		character:Greystark_10 = {
			save_scope_as = hc_selection
		}
		trigger_event = agot_house_customizer.0020
	}

	#Woodfoot
	option = {
		name = agot_house_customizer.0003.woodfoot
		trigger = {
			agot_is_house_extinct_history_trigger = { FOUNDER = character:Woodfoot_1 }
		}	
		character:Woodfoot_1 = {
			save_scope_as = hc_selection
		}
		trigger_event = agot_house_customizer.0020
	}

	#Towers
	option = {
		name = agot_house_customizer.0003.towersn
		trigger = {
			agot_is_house_extinct_history_trigger = { FOUNDER = character:TowersN_1 }
		}
		character:TowersN_1 = {
			save_scope_as = hc_selection
		}
		trigger_event = agot_house_customizer.0020
	}

	# Back Option
	option = {
		name = agot_house_customizer.back_option
		trigger_event = {
			id = agot_house_customizer.0002
		}
	}

}

#Select Extinct Riverlands
agot_house_customizer.0004 = {
	type = character_event
	title = agot_house_customizer.0004.t
	desc = agot_house_customizer.0004.desc

	theme = family

	override_background = {
		reference = physicians_study
	}

	left_portrait = {
		character = root
		animation = throne_room_writer
	}

	right_portrait = {
		character = root
		animation = throne_room_writer
	}

	immediate = {
		play_music_cue = "mx_cue_succession"
	}

	#fisher of riverlands
	option = {
		name = agot_house_customizer.0004.fisher_riverlands
		trigger = {
			agot_is_house_extinct_history_trigger = { FOUNDER = character:Fisher_riverlands_duplicate_1 }
		}	
		character:Fisher_riverlands_duplicate_8 = {
			save_scope_as = hc_selection
		}
		trigger_event = agot_house_customizer.0020
	}

	#Harroway
	option = {
		name = agot_house_customizer.0004.harroway
		trigger = {
			agot_is_house_extinct_history_trigger = { FOUNDER = character:Harroway_5 }
		}	
		character:Harroway_8 = {
			save_scope_as = hc_selection
		}
		trigger_event = agot_house_customizer.0020
	}

	#Justman
	option = {
		name = agot_house_customizer.0004.justman
		trigger = {
			agot_is_house_extinct_history_trigger = { FOUNDER = character:Justman_1 }
		}	
		character:Justman_8 = {
			save_scope_as = hc_selection
		}
		trigger_event = agot_house_customizer.0020
	}


	#Qoherys
	option = {
		name = agot_house_customizer.0004.qoherys
		trigger = {
			agot_is_house_extinct_history_trigger = { FOUNDER = character:Qoherys_1 }
		}	
		create_artifact_subterfuge_effect = { OWNER = this }
		character:Qoherys_4 = {
			save_scope_as = hc_selection
		}
		trigger_event = agot_house_customizer.0020
	}

	#Teague
	option = {
		name = agot_house_customizer.0004.teague
		trigger = {
			agot_is_house_extinct_history_trigger = { FOUNDER = character:Teague_1 }
		}	
		character:Teague_6 = {
			save_scope_as = hc_selection
		}
		trigger_event = agot_house_customizer.0020
	}

		#Towers of Harrenhal
	option = {
		name = agot_house_customizer.0004.towers_of_harrenhal
		trigger = {
			agot_is_house_extinct_history_trigger = { FOUNDER = character:Towers_1 }
		}	
		character:Towers_6 = {
			save_scope_as = hc_selection
		}
		trigger_event = agot_house_customizer.0020
	}

	#Real Mudd Dynasty
	option = {
		name = agot_house_customizer.0004.mudd
		trigger = {
			agot_is_house_extinct_history_trigger = { FOUNDER = character:Mudd_3 }
		}
		character:Mudd_34 = {
			save_scope_as = hc_selection
		}
		trigger_event = agot_house_customizer.0020
	}

	# Back Option
	option = {
		name = agot_house_customizer.back_option
		trigger_event = {
			id = agot_house_customizer.0002
		}
	}

	# Hook #AGOT TODO NEEDS AT LEAST ONE CHARACTER

}

#Select Extinct Vale
agot_house_customizer.0005 = {
	type = character_event
	title = agot_house_customizer.0005.t
	desc = agot_house_customizer.0005.desc

	theme = family

	override_background = {
		reference = physicians_study
	}

	left_portrait = {
		character = root
		animation = throne_room_writer
	}

	right_portrait = {
		character = root
		animation = throne_room_writer
	}

	immediate = {
		play_music_cue = "mx_cue_succession"
	}

	#shell
	option = {
		name = agot_house_customizer.0005.shell
		trigger = {
			agot_is_house_extinct_history_trigger = { FOUNDER = character:Shell_Vale_1 }
		}	
		character:Shell_Vale_1 = {
			save_scope_as = hc_selection
		}
		trigger_event = agot_house_customizer.0020
	}

	#brightstone
	option = {
		name = agot_house_customizer.0005.brightstone
		trigger = {
			agot_is_house_extinct_history_trigger = { FOUNDER = character:Brightstone_1 }
		}	
		character:Brightstone_1 = {
			save_scope_as = hc_selection
		}
		trigger_event = agot_house_customizer.0020
	}

	# Back Option
	option = {
		name = agot_house_customizer.back_option
		trigger_event = agot_house_customizer.0002
	}

}

#Select Extinct Crownlands
agot_house_customizer.0006 = {
	type = character_event
	title = agot_house_customizer.0006.t
	desc = agot_house_customizer.0006.desc

	theme = family

	override_background = {
		reference = physicians_study
	}

	left_portrait = {
		character = root
		animation = throne_room_writer
	}

	right_portrait = {
		character = root
		animation = throne_room_writer
	}

	immediate = {
		play_music_cue = "mx_cue_succession"
	}

	# Blackfyre
	option = {
		name = agot_house_customizer.0006.blackfyre
		trigger = {
			agot_is_house_extinct_history_trigger = { FOUNDER = character:Targaryen_94 }
		}
		character:Blackfyre_14 = {
			save_scope_as = hc_selection
		}
		trigger_event = agot_house_customizer.0020
	}

	# Darklyn
	option = {
		name = agot_house_customizer.0006.darklyn
		trigger = {
			agot_is_house_extinct_history_trigger = { FOUNDER = character:Darklyn_1 }
		}
		character:Darklyn_47 = {
			save_scope_as = hc_selection
		}
		trigger_event = agot_house_customizer.0020
	}

	# Back Option
	option = {
		name = agot_house_customizer.back_option
		trigger_event = agot_house_customizer.0002
	}

}

#Select Extinct Stormlands
agot_house_customizer.0007 = {
	type = character_event
	title = agot_house_customizer.0007.t
	desc = agot_house_customizer.0007.desc

	theme = family

	override_background = {
		reference = physicians_study
	}

	left_portrait = {
		character = root
		animation = throne_room_writer
	}

	right_portrait = {
		character = root
		animation = throne_room_writer
	}

	immediate = {
		play_music_cue = "mx_cue_succession"
	}

	#Durrandon
	option = {
		name = agot_house_customizer.0007.durrandon
		trigger = {
			agot_is_house_extinct_history_trigger = { FOUNDER = character:Durrandon_1 }
		}	
		character:Durrandon_87 = {
			save_scope_as = hc_selection
		}
		trigger_event = agot_house_customizer.0020
	}


	option = {
		name = agot_house_customizer.back_option
		trigger_event = agot_house_customizer.0002
	}

}

##Select Extinct Dorne
agot_house_customizer.0008 = {
	type = character_event
	title = agot_house_customizer.0008.t
	desc = agot_house_customizer.0008.desc

	theme = family

	override_background = {
		reference = physicians_study
	}

	left_portrait = {
		character = root
		animation = throne_room_writer
	}

	right_portrait = {
		character = root
		animation = throne_room_writer
	}

	immediate = {
		play_music_cue = "mx_cue_succession"
	}

	# Dryland
	option = {
		name = agot_house_customizer.0008.dryland
		trigger = {
			agot_is_house_extinct_history_trigger = { FOUNDER = character:Dryland_1 }
		}	
		character:Dryland_1 = {
			save_scope_as = hc_selection
		}
		trigger_event = agot_house_customizer.0020
	}

	# Back
	option = {
		name = agot_house_customizer.back_option
		trigger_event = agot_house_customizer.0002
	}

	# Briar #AGOT TODO NEEDS AT LEAST ONE CHARACTER
	# Brook #AGOT TODO NEEDS AT LEAST ONE CHARACTER
	# Holt #AGOT TODO NEEDS AT LEAST ONE CHARACTER
	# Hull #AGOT TODO NEEDS AT LEAST ONE CHARACTER
	# Lake #AGOT TODO NEEDS AT LEAST ONE CHARACTER
	# Wade #AGOT TODO NEEDS AT LEAST ONE CHARACTER
}

#Select Extinct Reach
agot_house_customizer.0009 = {
	type = character_event
	title = agot_house_customizer.0009.t
	desc = agot_house_customizer.0009.desc

	theme = family

	override_background = {
		reference = physicians_study
	}

	left_portrait = {
		character = root
		animation = throne_room_writer
	}

	right_portrait = {
		character = root
		animation = throne_room_writer
	}

	immediate = {
		play_music_cue = "mx_cue_succession"
	}

	#Gardener
	option = {
		name = agot_house_customizer.0009.gardener
		trigger = {
			agot_is_house_extinct_history_trigger = { FOUNDER = character:Gardener_1 }
		}	
		character:Gardener_95 = {
			save_scope_as = hc_selection
		}
		trigger_event = agot_house_customizer.0020
	}

	# Back Option
	option = {
		name = agot_house_customizer.back_option
		trigger_event = agot_house_customizer.0002
	}

}

#Select Extinct Westerlands
agot_house_customizer.0010 = {
	type = character_event
	title = agot_house_customizer.0010.t
	desc = agot_house_customizer.0010.desc

	theme = family

	override_background = {
		reference = physicians_study
	}

	left_portrait = {
		character = root
		animation = throne_room_writer
	}

	right_portrait = {
		character = root
		animation = throne_room_writer
	}

	immediate = {
		play_music_cue = "mx_cue_succession"
	}

	#Casterly
	option = {
		name = agot_house_customizer.0010.casterly
		trigger = {
			agot_is_house_extinct_history_trigger = { FOUNDER = character:Casterly_1 }
		}	
		character:Casterly_7 = {
			save_scope_as = hc_selection
		}
		trigger_event = agot_house_customizer.0020
	}

	#Parren
	option = {
		name = agot_house_customizer.0010.parren
		trigger = {
			agot_is_house_extinct_history_trigger = { FOUNDER = character:Parren_1 }
		}	
		character:Parren_17 = {
			save_scope_as = hc_selection
		}
		trigger_event = agot_house_customizer.0020
	}

	#reyne
	option = {
		name = agot_house_customizer.0010.reyne
		trigger = {
			agot_is_house_extinct_history_trigger = { FOUNDER = character:Reyne_1 }
		}
		character:Reyne_45 = {
			save_scope_as = hc_selection
		}
		trigger_event = agot_house_customizer.0020
	}

	# Back Option
	option = {
		name = agot_house_customizer.back_option
		trigger_event = agot_house_customizer.0002
	}

}

#Select extinct Ironborn
agot_house_customizer.0011 = {
	type = character_event
	title = agot_house_customizer.0011.t
	desc = agot_house_customizer.0011.desc

	theme = family

	override_background = {
		reference = physicians_study
	}

	left_portrait = {
		character = root
		animation = throne_room_writer
	}

	right_portrait = {
		character = root
		animation = throne_room_writer
	}

	immediate = {
		play_music_cue = "mx_cue_succession"
	}

	# Greyiron
	option = {
		name = agot_house_customizer.0011.greyiron
		trigger = {
			agot_is_house_extinct_history_trigger = { FOUNDER = character:Greyiron_1 }
		}	
		character:Greyiron_32 = {
			save_scope_as = hc_selection
		}
		trigger_event = agot_house_customizer.0020
	}

	# Hoare
	option = {
		name = agot_house_customizer.0011.hoare
		trigger = {
			agot_is_house_extinct_history_trigger = { FOUNDER = character:Hoare_1 }
		}	
		character:Hoare_31 = {
			save_scope_as = hc_selection
		}
		trigger_event = agot_house_customizer.0020
	}

	# Back Option
	option = {
		name = agot_house_customizer.back_option
		trigger_event = agot_house_customizer.0002
	}

}

# #Select extinct Essos
agot_house_customizer.0012 = {
	type = character_event
	title = agot_house_customizer.0012.t
	desc = agot_house_customizer.0012.desc

	theme = family

	override_background = {
		reference = physicians_study
	}

	left_portrait = {
		character = root
		animation = throne_room_writer
	}

	right_portrait = {
		character = root
		animation = throne_room_writer
	}

	immediate = {
		play_music_cue = "mx_cue_succession"
	}

	# Varezys
	option = {
		name = agot_house_customizer.0012.varezys
		trigger = {
			agot_is_house_extinct_history_trigger = { FOUNDER = character:Varezys_1 }
		}	
		custom_tooltip = agot_house_customizer.0012.varezys.tt
		character:Varezys_1 = {
			save_scope_as = hc_selection
		}
		trigger_event = agot_house_customizer.0020
	}

	# Mataeryon
	option = {
		name = agot_house_customizer.0012.mataeryon
		trigger = {
			agot_is_house_extinct_history_trigger = { FOUNDER = character:Mataeryon_1 }
		}	
		character:Mataeryon_1 = {
			save_scope_as = hc_selection
		}
		trigger_event = agot_house_customizer.0020
	}

	# Belaerys
	option = {
		name = agot_house_customizer.0012.belaerys
		trigger = {
			agot_is_house_extinct_history_trigger = { FOUNDER = character:Belaerys_1 }
		}	
		character:Belaerys_1 = {
			save_scope_as = hc_selection
		}
		trigger_event = agot_house_customizer.0020
	}

	# Back Option
	option = {
		name = agot_house_customizer.back_option
		trigger_event = agot_house_customizer.0002
	}

}

# #Essos?
# agot_house_customizer.0013 = {}

# #Far east?
# agot_house_customizer.0014 = {}

# #Other regions
# agot_house_customizer.0015 = {}


######################################################
### HOUSE CONVERSION AND CHARACTER RELATION EVENTS ###
######################################################

# This event handles the EXTINCT HOUSE conversion
agot_house_customizer.0020 = {
	type = character_event
	title = agot_house_customizer.0020.t
	desc = agot_house_customizer.0020.desc

	theme = family

	override_background = {
		reference = study
	}

	left_portrait = {
		character = root
		animation = throne_room_writer
	}

	right_portrait = {
		character = scope:hc_selection
		animation = throne_room_writer
	}

	immediate = {
		play_music_cue = "mx_cue_succession"
		every_held_title = { set_coa = scope:hc_selection.house }
	}

	#I want to play as their sibling
	option = {
		name = agot_house_customizer.0020.a
		trigger = {
			OR = {
				scope:hc_selection.mother ?= { is_adult = yes }
				scope:hc_selection.father ?= { is_adult = yes }
			}
		}
		if = { # You have the bastard trait
			limit = {
				exists = scope:hc_selection.father
				scope:hc_selection.father.primary_title.tier >= scope:hc_selection.mother.primary_title.tier
				has_trait = bastard
			}
			set_house = scope:hc_selection.father.house
			set_father = scope:hc_selection.father
		}
		else_if = { # You selected a father
			limit = {
				exists = scope:hc_selection.father
				scope:hc_selection.father.primary_title.tier >= scope:hc_selection.mother.primary_title.tier
			}
			set_house = scope:hc_selection.father.house
			set_father = scope:hc_selection.father
			if = { # Check for and set valid mother
				limit = { scope:hc_selection.mother ?= { is_adult = yes } }
				set_mother = scope:hc_selection.mother
			}
		}
		else = { # You selected a mother
			set_house = scope:hc_selection.mother.house
			set_mother = scope:hc_selection.mother
			if = { # Check for and set valid father
				limit = { scope:hc_selection.father ?= { is_adult = yes } }
				set_father = scope:hc_selection.father
			}
		}

		if = { #If any child is not the same house
			limit = { any_child = {	NOT = { house = root.house } } }
			every_child = { #Then we scope to every possible child and set their house as YOUR house.
				limit = { NOT = { house = root.house } }
				set_house = root.house
			}
		}

		if = { # The seed is strong
			limit = { has_strong_seed_dynasty = yes }
			trigger_event = agot_house_customizer.0026
		}
		hidden_effect = { remove_trait = house_customizer }
		# Bastard Surnames
		if = {
			limit = {
					has_trait = bastard
			}
			if = {
				limit = {
					exists = scope:child.var:agot_birthplace
				}
				agot_add_birthplace_bastard_nickname_effect = {
					BIRTHPLACE = root.var:agot_birthplace
				}
			}
			else = {
				agot_add_birthplace_bastard_nickname_effect = {
					BIRTHPLACE = root.location
				}
			}
		}

		#trigger_event = agot_house_customizer.0022

		# Remind them of the option
		show_as_unavailable = { always = yes }
	}

	#I want to play as their child
	option = {
		name = agot_house_customizer.0020.b
		trigger = { scope:hc_selection = { is_adult = yes } }
		if = { # You have the bastard trait
			limit = {
				scope:hc_selection = { is_male = yes }
				has_trait = bastard
			}
			set_house = scope:hc_selection.house
			set_father = scope:hc_selection
		}
		else_if = { # You selected a father
			limit = { scope:hc_selection = { is_male = yes } }
			set_house = scope:hc_selection.house
			set_father = scope:hc_selection
			if = {
				limit = { # Check for and set valid mother
					scope:hc_selection.primary_spouse ?= {
						is_female = yes
						is_adult = yes
					}
				}
				set_mother = scope:hc_selection.primary_spouse
			}
		}
		else = { # You selected a mother
			set_house = scope:hc_selection.house
			set_mother = scope:hc_selection
			if = {
				limit = { # Check for and set valid father
					scope:hc_selection.primary_spouse ?= {
						is_male = yes
						is_adult = yes
					}
				}
				set_father = scope:hc_selection.primary_spouse
			}
		}

		if = { #If any child is not the same house
			limit = { any_child = { NOT = { house = root.house } } }
			every_child = { #Then we scope to every possible child and set their house as YOUR house.
				limit = { NOT = { house = root.house } }
				set_house = root.house
			}
		}

		if = { # The seed is strong
			limit = { has_strong_seed_dynasty = yes }
			trigger_event = agot_house_customizer.0026
		}
		hidden_effect = { remove_trait = house_customizer }
		# Bastard Surnames
			if = {
			limit = {
				has_trait = bastard
			}
			if = {
				limit = {
					exists = scope:child.var:agot_birthplace
				}
				agot_add_birthplace_bastard_nickname_effect = {
					BIRTHPLACE = root.var:agot_birthplace
				}
			}
			else = {
				agot_add_birthplace_bastard_nickname_effect = {
					BIRTHPLACE = root.location
				}
			}
		}

		# Remind them of the option
		show_as_unavailable = { always = yes }
	}

	#I want to play as their relative
	option = {
		name = agot_house_customizer.0020.c
		trigger = {
			scope:hc_selection = {
				any_close_or_extended_family_member = {
					even_if_dead = yes
					is_adult = yes
					house = scope:hc_selection.house
				}
			}
		}
		add_character_flag = relative_pop_extinct
		trigger_event = agot_house_customizer.0200
	}

	# I want to choose a different house
	option = {
		name = agot_house_customizer.0020.back
		custom_tooltip = agot_house_customizer.0020.back.tt
		trigger_event = agot_house_customizer.0002
		every_held_title = { set_coa = scope:root.house }
	}
}

# This event handles the LIVING HOUSE conversion (specifically, from the interaction)
agot_house_customizer.0021 = {
	type = character_event
	title = agot_house_customizer.0020.t
	desc = agot_house_customizer.0020.desc

	theme = family

	override_background = {
		reference = study
	}

	left_portrait = {
		character = root
		animation = throne_room_writer
	}

	right_portrait = {
		character = scope:hc_selection
		animation = throne_room_writer
	}

	immediate = {
		play_music_cue = "mx_cue_succession"
		scope:recipient = { save_scope_as = hc_selection }
		# Mother may be needed, so generate one if one doesn't exist
		if = {
			limit = { NOT = { exists = scope:hc_random_mother } }
			create_character = {
				template = generic_female_peasant_character
				employer = root
				age = root.appropriate_parent_age
				gender = female
				save_scope_as = hc_random_mother
				after_creation = { copy_inheritable_appearance_from = root }
			}
		}
		# Father may be needed, so generate one if one doesn't exist
		if = {
			limit = { NOT = { exists = scope:hc_random_father } }
			create_character = {
				template = generic_peasant_character
				employer = root
				age = root.appropriate_parent_age
				gender = male
				save_scope_as = hc_random_father
				after_creation = { copy_inheritable_appearance_from = root }
			}
		}
		if = { # Scope for localization
			limit = { scope:hc_selection = { is_male = yes } }
			scope:hc_random_mother = { save_scope_as = second_parent }
		}
		if = { # Scope for localization
			limit = { scope:hc_selection = { is_female = yes } }
			scope:hc_random_father = { save_scope_as = second_parent }
		}
	}

	#I want to play as their sibling
	option = {
		name = agot_house_customizer.0020.a
		trigger = {
			OR = {
				exists = scope:hc_selection.mother
				exists = scope:hc_selection.father
			}
			OR = {
				scope:hc_selection.mother ?= {
					OR = {
						can_be_parent_of = root
						#For some reason can_be_parent_of doesn't work with female characters?
						16 <= {
							value = scope:hc_selection.mother.age
							subtract = root.age
						}
					}
				}
				scope:hc_selection.father ?= { can_be_parent_of = root }
			}
		}
		if = { # You have the bastard trait
			limit = {
				scope:hc_selection.father.primary_title.tier >= scope:hc_selection.mother.primary_title.tier
				has_trait = bastard
			}
			set_house = scope:hc_selection.father.house
			set_father = scope:hc_selection.father
			set_mother = scope:hc_random_mother
			# Other random parent no longer needed
			hidden_effect = { scope:hc_random_father = { death = { death_reason = death_disappearance } } }
		}
		else_if = { # You selected a father
			limit = { scope:hc_selection.father.primary_title.tier >= scope:hc_selection.mother.primary_title.tier }
			set_house = scope:hc_selection.father.house
			set_father = scope:hc_selection.father
			if = { # Check for and set valid mother
				limit = {
					scope:hc_selection.mother ?= {
						OR = {
							can_be_parent_of = root
							#For some reason can_be_parent_of doesn't work with female characters?
							16 <= {
								value = scope:hc_selection.mother.age
								subtract = root.age
							}
						}
					}
				}
				set_mother = scope:hc_selection.mother
			}
			hidden_effect = { # Random parents no longer needed
				scope:hc_random_mother = { death = { death_reason = death_disappearance } }
				scope:hc_random_father = { death = { death_reason = death_disappearance } }
			}
		}
		else = { # You selected a mother
			set_house = scope:hc_selection.mother.house
			set_mother = scope:hc_selection.mother
			if = { # Check for and set valid father
				limit = { scope:hc_selection.father ?= { can_be_parent_of = root } }
				set_father = scope:hc_selection.father
			}
			hidden_effect = { # Random parents no longer needed
				scope:hc_random_father = { death = { death_reason = death_disappearance } }
				scope:hc_random_mother = { death = { death_reason = death_disappearance } }
			}
		}

		if = { #If any child is not the same house
			limit = { any_child = { NOT = { house = root.house } } }
			every_child = { #Then we scope to every possible child and set their house as YOUR house.
				limit = { NOT = { house = root.house } }
				set_house = root.house
			}
		}

		if = { # The seed is strong
			limit = { has_strong_seed_dynasty = yes }
			trigger_event = agot_house_customizer.0026
		}
		hidden_effect = { remove_trait = house_customizer }
		# Bastard Surnames
		if = {
			limit = {
				has_trait = bastard
			}
			if = {
				limit = {
					exists = scope:child.var:agot_birthplace
				}
				agot_add_birthplace_bastard_nickname_effect = {
					BIRTHPLACE = root.var:agot_birthplace
				}
			}
			else = {
				agot_add_birthplace_bastard_nickname_effect = {
					BIRTHPLACE = root.location
				}
			}
		}

		# Remind them of the option
		show_as_unavailable = { always = yes }
	}

	#I want to play as their child
	option = {
		name = agot_house_customizer.0020.b
		trigger = {
			scope:hc_selection = {
				OR = {
					can_be_parent_of = root
					#For some reason can_be_parent_of doesn't work with female characters?
					16 <= {
						value = scope:hc_selection.age
						subtract = root.age
					}
				}
			}
		}
		if = { # You selected a father
			limit = { scope:hc_selection = { is_male = yes } }
			set_house = scope:hc_selection.house
			set_father = scope:hc_selection

			hidden_effect = { # Random parents no longer needed
				scope:hc_random_mother = { death = { death_reason = death_disappearance } }
				scope:hc_random_father = { death = { death_reason = death_disappearance } }
			}
		}
		else = { # You selected a mother
			set_house = scope:hc_selection.house
			set_mother = scope:hc_selection

			hidden_effect = { # Random parents no longer needed
				scope:hc_random_mother = { death = { death_reason = death_disappearance } }
				scope:hc_random_father = { death = { death_reason = death_disappearance } }
			}
		}

		if = { #If any child is not the same house
			limit = { any_child = { NOT = { house = root.house } } }
			every_child = { #Then we scope to every possible child and set their house as YOUR house.
				limit = { NOT = { house = root.house } }
				set_house = root.house
			}
		}

		if = { # The seed is strong
			limit = { has_strong_seed_dynasty = yes }
			trigger_event = agot_house_customizer.0026
		}
		hidden_effect = { remove_trait = house_customizer }
		# Bastard Surnames
		if = {
			limit = {
				has_trait = bastard
			}
			if = {
				limit = {
					exists = scope:child.var:agot_birthplace
				}
				agot_add_birthplace_bastard_nickname_effect = {
					BIRTHPLACE = root.var:agot_birthplace
				}
			}
			else = {
				agot_add_birthplace_bastard_nickname_effect = {
					BIRTHPLACE = root.location
				}
			}
		}

		# Remind them of the option
		show_as_unavailable = { always = yes }
	}

	#I want to play as their child but have a parent assigned to me
	option = {
		name = agot_house_customizer.0020.bb
		trigger = {
			scope:hc_selection = {
				OR = {
					can_be_parent_of = root
					#For some reason can_be_parent_of doesn't work with female characters?
					16 <= {
						value = scope:hc_selection.age
						subtract = root.age
					}
				}
			}
		}
		if = { # You have the bastard trait
			limit = {
				scope:hc_selection = { is_male = yes }
				has_trait = bastard
			}
			set_house = scope:hc_selection.house
			set_father = scope:hc_selection
			set_mother = scope:hc_random_mother
			# Other random parent no longer needed
			hidden_effect = { scope:hc_random_father = { death = { death_reason = death_disappearance } } }
		}
		else_if = { # You selected a father
			limit = { scope:hc_selection = { is_male = yes } }
			set_house = scope:hc_selection.house
			set_father = scope:hc_selection
			if = {
				limit = { # Check for and set valid mother
					scope:hc_selection.primary_spouse ?= {
						is_female = yes
						OR = {
							can_be_parent_of = root
							#For some reason can_be_parent_of doesn't work with female characters?
							16 <= {
								value = scope:hc_selection.primary_spouse.age
								subtract = root.age
							}
						}
					}
				}
				set_mother = scope:hc_selection.primary_spouse

				hidden_effect = { # Random parents no longer needed
					scope:hc_random_mother = { death = { death_reason = death_disappearance } }
					scope:hc_random_father = { death = { death_reason = death_disappearance } }
				}
			}
			else_if = { # Otherwise set random mother
				limit = {
					scope:hc_selection = {
						OR = {
							is_married = no
							primary_spouse = { NOT = { can_be_parent_of = root } }
						}
					}
				}
				set_mother = scope:hc_random_mother
				# Other random parent no longer needed
				hidden_effect = { scope:hc_random_father = { death = { death_reason = death_disappearance } } }
			}
		}
		else = { # You selected a mother
			set_house = scope:hc_selection.house
			set_mother = scope:hc_selection
			if = {
				limit = { # Check for and set valid father
					scope:hc_selection.primary_spouse ?= {
						is_male = yes
						can_be_parent_of = root
					}
				}
				set_father = scope:hc_selection.primary_spouse

				hidden_effect = { # Random parents no longer needed
					scope:hc_random_father = { death = { death_reason = death_disappearance } }
					scope:hc_random_mother = { death = { death_reason = death_disappearance } }
				}
			}
			else_if = { # Otherwise set random father
				limit = {
					scope:hc_selection = {
						OR = {
							is_married = no
							primary_spouse = { NOT = { can_be_parent_of = root } }
						}
					}
				}
				set_father = scope:hc_random_father
				# Other random parent no longer needed
				hidden_effect = { scope:hc_random_mother = { death = { death_reason = death_disappearance } } }
			}
		}

		if = { #If any child is not the same house
			limit = { any_child = { NOT = { house = root.house } } }
			every_child = { #Then we scope to every possible child and set their house as YOUR house.
				limit = { NOT = { house = root.house } }
				set_house = root.house
			}
		}

		if = { # The seed is strong
			limit = { has_strong_seed_dynasty = yes }
			trigger_event = agot_house_customizer.0026
		}
		hidden_effect = { remove_trait = house_customizer }
		# Bastard Surnames
		if = {
			limit = {
				has_trait = bastard
			}
			if = {
				limit = {
					exists = scope:child.var:agot_birthplace
				}
				agot_add_birthplace_bastard_nickname_effect = {
					BIRTHPLACE = root.var:agot_birthplace
				}
			}
			else = {
				agot_add_birthplace_bastard_nickname_effect = {
					BIRTHPLACE = root.location
				}
			}
		}

		# Remind them of the option
		show_as_unavailable = { always = yes }
	}

	#I want to play as their relative
	option = {
		name = agot_house_customizer.0020.c
		trigger = {
			scope:hc_selection = {
				any_close_or_extended_family_member = {
					even_if_dead = yes
					is_adult = yes
					house = scope:hc_selection.house
				}
			}
		}
		add_character_flag = relative_pop_living
		trigger_event = agot_house_customizer.0200

		hidden_effect = { # Random parents no longer needed
			scope:hc_random_mother = { death = { death_reason = death_disappearance } }
			scope:hc_random_father = { death = { death_reason = death_disappearance } }
		}
	}

	# Crowned Stag Special Starts
	option = { # I want to play as Aerys' child
		name = agot_house_customizer.0020.d
		trigger = {
			scope:hc_selection.house = character:Targaryen_120.house
			game_start_date = 8284.6.2
			character:Targaryen_1 = { can_be_parent_of = root }
		}
		set_house = scope:hc_selection.house
		set_father = character:Targaryen_1
		set_mother = character:Targaryen_1.primary_spouse

		if = { #If any child is not the same house
			limit = { any_child = { NOT = { house = root.house } } }
			every_child = { #Then we scope to every possible child and set their house as YOUR house.
				limit = { NOT = { house = root.house } }
				set_house = root.house
			}
		}

		if = { # The seed is strong
			limit = { has_strong_seed_dynasty = yes }
			trigger_event = agot_house_customizer.0026
		}

		hidden_effect = { # Random parents no longer needed
			scope:hc_random_mother = { death = { death_reason = death_disappearance } }
			scope:hc_random_father = { death = { death_reason = death_disappearance } }
		}
		hidden_effect = { remove_trait = house_customizer }
		# Bastard Surnames
		if = {
			limit = {
				has_trait = bastard
			}
			if = {
				limit = {
					exists = scope:child.var:agot_birthplace
				}
				agot_add_birthplace_bastard_nickname_effect = {
					BIRTHPLACE = root.var:agot_birthplace
				}
			}
			else = {
				agot_add_birthplace_bastard_nickname_effect = {
					BIRTHPLACE = root.location
				}
			}
		}
	}

	option = { # I want to play as Rhaegar's child
		name = agot_house_customizer.0020.e
		trigger = {
			scope:hc_selection.house = character:Targaryen_120.house
			game_start_date = 8284.6.2
			character:Targaryen_3 = { can_be_parent_of = root }
		}
		set_house = scope:hc_selection.house
		set_father = character:Targaryen_3
		set_mother = character:Targaryen_3.primary_spouse

		if = { #If any child is not the same house
			limit = { any_child = { NOT = { house = root.house } } }
			every_child = { #Then we scope to every possible child and set their house as YOUR house.
				limit = { NOT = { house = root.house } }
				set_house = root.house
			}
		}

		if = { # The seed is strong
			limit = { has_strong_seed_dynasty = yes }
			trigger_event = agot_house_customizer.0026
		}

		hidden_effect = { # Random parents no longer needed
			scope:hc_random_mother = { death = { death_reason = death_disappearance } }
			scope:hc_random_father = { death = { death_reason = death_disappearance } }
		}
		hidden_effect = { remove_trait = house_customizer }
		# Bastard Surnames
		if = {
			limit = {
				has_trait = bastard
			}
			if = {
				limit = {
					exists = scope:child.var:agot_birthplace
				}
				agot_add_birthplace_bastard_nickname_effect = {
					BIRTHPLACE = root.var:agot_birthplace
				}
			}
			else = {
				agot_add_birthplace_bastard_nickname_effect = {
					BIRTHPLACE = root.location
				}
			}
		}
	}

	# Royal Bastard Special Start
	option = { # I want to play as their secret royal bastard
		name = agot_house_customizer.0020.f
		flavor = agot_house_customizer.0020.f.flavor
		trigger = {
			title:e_the_iron_throne = { # selected character or their parents were on the throne
				OR = {
					holder = scope:hc_selection
					any_past_holder = {
						count >= 1
						OR = {
							this = scope:hc_selection
							this = scope:hc_selection.father
							this = scope:hc_selection.mother
						}
					}
				}
			}
			scope:hc_selection = {
				is_male = yes # Bastard doesn't make sense for mothers (yet at least)
				can_be_parent_of = root
			}
		}
		set_real_father = scope:hc_selection
		set_mother = scope:hc_random_mother
		# Add secret to mother and reveal to child
		scope:hc_random_mother = {
			add_secret = {
				type = secret_unmarried_illegitimate_child
				target = root
			}
			every_secret = {
				limit = { secret_type = secret_unmarried_illegitimate_child }
				reveal_to = root
			}
		}

		remove_trait = bastard
		remove_trait = legitimized_bastard
		remove_trait = disputed_heritage
		remove_trait = wild_oat
		add_trait = bastard_founder
		add_character_flag = {
			flag = skip_coa_assignment
			days = 2
		}

		if = { # The seed is strong
			limit = { scope:hc_selection = { has_strong_seed_dynasty = yes } } # Does your selection have strong seed?
			root.house = { save_scope_as = old_house } # Then remember which house you're in before changing
			hidden_effect = { set_house = scope:hc_selection.house } # Temporarily change to your selection's house
			trigger_event = agot_house_customizer.0026 # Fire strong seed event using your selection's house
		}

		# Random father no longer needed
		hidden_effect = { scope:hc_random_father = { death = { death_reason = death_disappearance } } }
		hidden_effect = { remove_trait = house_customizer }
	}

	# I want to choose a different house
	option = {
		name = agot_house_customizer.0020.back
		custom_tooltip = agot_house_customizer.0021.back.tt
		trigger_event = agot_house_customizer.0001
		hidden_effect = { # Random parents no longer needed
			scope:hc_random_mother = { death = { death_reason = death_disappearance } }
			scope:hc_random_father = { death = { death_reason = death_disappearance } }
		}
	}

	after = {
		if = {
			limit = { NOT = { has_character_flag = skip_coa_assignment } }
			every_held_title = { set_coa = scope:hc_selection.house }
		}
	}
}

########################
## MAINTENANCE EVENTS ##
########################

#################################################
### Dynasty Renown Bug Fix Maintenance Events ###
#################################################

# Event that triggers that kills created characters in the extinct house list from the Game Start on Action (fires when any ruler does not have the HC trait)
agot_house_customizer.0024 = {
	scope = none
	hidden = yes

	immediate = {
		every_in_global_list = {
			variable = hc_dummies
			death = {
				death_reason = death_vanished
			}
			set_to_lowborn = yes			
		}
	}
}

# STRONG SEED APPLICATION EVENT
agot_house_customizer.0026 = {
	type = character_event
	title = agot_house_customizer.0026.t
	desc = agot_house_customizer.0026.desc

	theme = family

	override_background = {
		reference = study
	}

	left_portrait = {
		character = root
		animation = throne_room_writer
	}
	right_portrait = scope:hc_selection

	# Yes - Apply Strong Seed to My Character: This will overwrite DNA
	option = {
		name = agot_house_customizer.0026.a
		custom_tooltip = agot_house_customizer.0026.a.tt
		hidden_effect = {
			agot_assign_strong_seed_traits_effect = yes
			if = {
				limit = {
					any_child = {
						exists = yes
					}
				}
				every_child = {
					agot_assign_strong_seed_traits_effect = yes
				}
			}
		}
	}

	# No - Do not apply strong seed
	option = {
		name = agot_house_customizer.0026.b
	}

	# Change your house back if necessary
	after = {
		if = {
			limit = { exists = scope:old_house }
			hidden_effect = { set_house = scope:old_house }
		}
	}
}

agot_house_customizer.0200 = {
	type = character_event
	title = agot_house_customizer.0200.t
	desc = agot_house_customizer.0200.desc
	theme = family
	override_background = {
		reference = study
	}
	left_portrait = {
		character = root
		animation = throne_room_writer
	}
	right_portrait = scope:hc_selection

	widget = {
		is_shown = { is_ai = no }
		gui = "event_window_character_selection_two_options"
		container = "custom_widgets_container"
	}

	immediate = {
		# Populate List
		if = { # You chose extinct
			limit = { has_character_flag = relative_pop_extinct }
			scope:hc_selection = {
				every_close_or_extended_family_member = {
					even_if_dead = yes
					limit = {
						is_adult = yes
						house = scope:hc_selection.house
					}
					root = {
						add_to_variable_list = {
							name = possible_characters
							target = prev
						}
					}
				}
			}
		}
		else_if = { # You chose living
			limit = { has_character_flag = relative_pop_living }
			scope:hc_selection = {
				every_close_or_extended_family_member = {
					even_if_dead = yes
					limit = {
						OR = {
							can_be_parent_of = root
							#For some reason can_be_parent_of doesn't work with female characters?
							16 <= {
								value = root.age
								subtract = age
							}
						}
						is_adult = yes
						house = scope:hc_selection.house
					}
					root = {
						add_to_variable_list = {
							name = possible_characters
							target = prev
						}
					}
				}
			}
		}
		# Order List
		ordered_in_list = {
			variable = possible_characters
			order_by = age
			root = { set_variable = { name = si_selected_character value = prev } }
			save_scope_as = hc_random_relative_selection
		}
	}

	option = {
		name = "agot_house_customizer.0200.ex"
		trigger = { has_character_flag = relative_pop_extinct }
		# Ordered List Maintenance
		var:si_selected_character = { save_scope_as = hc_random_relative_selection }
		clear_variable_list = possible_characters
		# House Customizer Maintenance
		set_house = scope:hc_random_relative_selection.house

		if = { # You selected a father
			limit = { scope:hc_random_relative_selection = { is_male = yes } }
			set_father = scope:hc_random_relative_selection
			if = {
				limit = { # Check for and set valid mother
					scope:hc_random_relative_selection.primary_spouse ?= {
						is_female = yes
						is_adult = yes
					}
				}
				set_mother = scope:hc_random_relative_selection.primary_spouse
			}
		}
		else = { # You selected a mother
			set_mother = scope:hc_random_relative_selection
			if = {
				limit = { # Check for and set valid father
					scope:hc_random_relative_selection.primary_spouse ?= {
						is_male = yes
						is_adult = yes
					}
				}
				set_father = scope:hc_random_relative_selection.primary_spouse
			}
		}

		if = { #If any child is not the same house
			limit = { any_child = { NOT = { house = root.house } } }
			every_child = { #Then we scope to every possible child and set their house as YOUR house.
				limit = { NOT = { house = root.house } }
				set_house = root.house
			}
		}

		if = { # The seed is strong
			limit = { has_strong_seed_dynasty = yes }
			trigger_event = agot_house_customizer.0026
		}
		remove_character_flag = relative_pop_extinct
		hidden_effect = { remove_trait = house_customizer }
		# Bastard Surnames
		if = {
			limit = {
				has_trait = bastard
			}
			if = {
				limit = {
					exists = scope:child.var:agot_birthplace
				}
				agot_add_birthplace_bastard_nickname_effect = {
					BIRTHPLACE = root.var:agot_birthplace
				}
			}
			else = {
				agot_add_birthplace_bastard_nickname_effect = {
					BIRTHPLACE = root.location
				}
			}
		}
	}

	option = {
		name = "agot_house_customizer.0200.li"
		trigger = { has_character_flag = relative_pop_living }
		# Ordered List Maintenance
		var:si_selected_character = { save_scope_as = hc_random_relative_selection }
		clear_variable_list = possible_characters
		# House Customizer Maintenance
		set_house = scope:hc_random_relative_selection.house #Set's the player's house to the selection's house

		if = { # You have the bastard trait
			limit = {
				scope:hc_random_relative_selection = { is_male = yes }
				has_trait = bastard
			}
			set_father = scope:hc_random_relative_selection
		}
		else_if = { # You selected a father
			limit = { scope:hc_random_relative_selection = { is_male = yes } }
			set_father = scope:hc_random_relative_selection
			if = {
				limit = { # Check for and set valid mother
					scope:hc_random_relative_selection.primary_spouse ?= {
						is_female = yes
						OR = {
							can_be_parent_of = root
							#For some reason can_be_parent_of doesn't work with female characters?
							16 <= {
								value = scope:hc_random_relative_selection.primary_spouse.age
								subtract = root.age
							}
						}
					}
				}
				set_mother = scope:hc_random_relative_selection.primary_spouse
			}
		}
		else = { # You selected a mother
			set_mother = scope:hc_random_relative_selection
			if = {
				limit = { # Check for and set valid father
					scope:hc_random_relative_selection.primary_spouse ?= {
						is_male = yes
						can_be_parent_of = root
					}
				}
				set_father = scope:hc_random_relative_selection.primary_spouse
			}
		}

		if = { #If any child is not the same house
			limit = { any_child = { NOT = { house = root.house } } }
			every_child = { #Then we scope to every possible child and set their house as YOUR house.
				limit = { NOT = { house = root.house } }
				set_house = root.house
			}
		}

		if = { # The seed is strong
			limit = { has_strong_seed_dynasty = yes }
			trigger_event = agot_house_customizer.0026
		}
		remove_character_flag = relative_pop_living
		hidden_effect = { remove_trait = house_customizer }
		# Bastard Surnames
		if = {
			limit = {
				has_trait = bastard
			}
			if = {
				limit = {
					exists = scope:child.var:agot_birthplace
				}
				agot_add_birthplace_bastard_nickname_effect = {
					BIRTHPLACE = root.var:agot_birthplace
				}
			}
			else = {
				agot_add_birthplace_bastard_nickname_effect = {
					BIRTHPLACE = root.location
				}
			}
		}
	}

	# On second thought - extinct
	option = {
		name = agot_house_customizer.0200.back
		custom_tooltip = agot_house_customizer.0200.back.tt
		trigger = { has_character_flag = relative_pop_extinct }
		clear_variable_list = possible_characters
		remove_character_flag = relative_pop_extinct
		trigger_event = agot_house_customizer.0020
	}

	# On second thought - living
	option = {
		name = agot_house_customizer.0200.back
		custom_tooltip = agot_house_customizer.0200.back.tt
		trigger = { has_character_flag = relative_pop_living }
		clear_variable_list = possible_characters
		remove_character_flag = relative_pop_living
		trigger_event = agot_house_customizer.0021
	}
}